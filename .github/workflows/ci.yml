## This is basic continuous integration build for your Quarkus application.
name: Quarkus build CI

on:
  push:
  # Run on every branch push: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet
    branches:
      - '**'
  release:
    types:
      - published

# These variables can be reused in the build steps
env:
  DOCKER_REPOSITORY: xliquidz
  DOCKER_IMAGE: code-with-quarkus

jobs:
  build:
    runs-on: ubuntu-latest
    # Code Build steps
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'
      # Checkout maven lifecycles: https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html
      - name: Build with Maven
        run: mvn verify -B
      - name: Upload /target folder as artifact
        uses: actions/upload-artifact@v3
        with:
          name: quarkus-target
          path: target/
          retention-days: 1
  docker:
    # Dependency on previous step to complete
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: quarkus-target
          path: ./target
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: .
      # Docker container steps
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{env.DOCKER_REPOSITORY}}/${{env.DOCKER_IMAGE}}
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./src/main/docker/Dockerfile.jvm
          push: true
          tags: ${{ steps.meta.outputs.tags }}
